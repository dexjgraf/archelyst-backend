[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "archelyst-backend"
version = "0.1.0"
description = "AI-powered financial analysis backend with hot-swappable data providers"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Archelyst Team", email = "team@archelyst.com"},
]
keywords = ["finance", "ai", "trading", "market-data", "analytics"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Web Framework
    "fastapi==0.104.1",
    "uvicorn[standard]==0.24.0",
    
    # Data Validation
    "pydantic==2.5.0",
    "pydantic-settings==2.0.3",
    
    # Database
    "sqlalchemy==2.0.23",
    "asyncpg==0.29.0",
    "alembic==1.13.1",
    
    # Caching and Background Tasks
    "redis==5.0.1",
    "celery==5.3.4",
    
    # Data Processing
    "pandas==2.1.3",
    "numpy==1.24.4",
    
    # Market Data
    "yfinance==0.2.25",
    "ccxt==4.1.77",
    
    # Technical Analysis
    "TA-Lib==0.4.28",
    
    # Machine Learning
    "scikit-learn==1.3.2",
    "PyPortfolioOpt==1.5.5",
    
    # Financial Libraries
    "quantlib==1.32",
    
    # HTTP Client
    "aiohttp==3.9.1",
    "httpx==0.25.2",
    
    # Authentication
    "python-jose[cryptography]==3.3.0",
    "passlib[bcrypt]==1.7.4",
    "python-multipart==0.0.6",
    
    # Environment
    "python-dotenv==1.0.0",
    
    # AI Providers
    "openai==1.3.7",
    "anthropic==0.7.7",
    
    # Neo4j (Optional)
    "neo4j==5.15.0",
    "py2neo==2021.2.4",
    
    # Network Analysis
    "networkx==3.2",
    
    # Natural Language Processing
    "spacy==3.7.2",
    
    # Monitoring
    "prometheus-client==0.19.0",
    
    # Logging
    "structlog==23.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "black==23.11.0",
    "flake8==6.1.0",
    "isort==5.12.0",
    "mypy==1.7.1",
]

test = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "httpx==0.25.2",
]

[project.urls]
"Homepage" = "https://github.com/archelyst/archelyst-backend"
"Bug Tracker" = "https://github.com/archelyst/archelyst-backend/issues"
"Repository" = "https://github.com/archelyst/archelyst-backend"
"Documentation" = "https://docs.archelyst.com"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "yfinance.*",
    "ccxt.*",
    "talib.*",
    "quantlib.*",
    "py2neo.*",
    "spacy.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_default_fixture_loop_scope = "function"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests as API tests",
    "asyncio: marks tests as async tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]